阻塞与非阻塞
传统的IO流都是阻塞式的，也就是说，当一个线程调用read()或者write()时，该线程会被阻塞，知道有一些数据被读取或者写入
该线程在此期间不能执行其他任务
在完成网络通信进行IO操作的时候， 会阻塞，所以服务器端必须为每个客户端提供一个独立的线程

java NIO是非阻塞式的
      当线程从某通道进行读写数据时 若没有数据可以使用时，该线程可以进行其他任务
      线程将非阻塞IO空闲时间用于其他通道上执行IO操作，所以单独的线程可以管理多个输入和输出通道
      因此NIO 可以让服务端使用一个或者有限几个线程来同时处理连接到服务端的所有客户端